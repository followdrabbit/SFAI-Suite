import openai
from dotenv import load_dotenv
import os
import datetime
import json

def create_baseline_request(request_content):
    # Load environment variables from the .env file
    load_dotenv()

    # Get the API Key from the environment
    api_key = os.getenv('OPENAI_API_KEY')

    if api_key is None:
        print("Error: OPENAI_API_KEY not found. Please check your .env file.")
        return

    # Set the OpenAI API key
    openai.api_key = api_key

    try:
        # Create a new thread to communicate with the assistant
        thread = openai.beta.threads.create()

        # Send a message to the assistant within the thread using the loaded request content
        message = openai.beta.threads.messages.create(
            thread_id=thread.id,
            role="user",
            content=request_content
        )

        # Optionally, print the assistant's response for debugging purposes
        print(f"Assistant response: {message.content}")

        # You might want to process the response further or save it, depending on your needs
        # For example, saving the response to a JSON file could be done here

    except Exception as e:
        print(f"Error communicating with the assistant: {e}")

if __name__ == "__main__":
    # Path to the baseline_prompt.txt file
    prompt_path = 'prompts/baseline_prompt.txt'
    
    # Load the request content from the file
    with open(prompt_path, 'r', encoding='utf-8') as file:
        request_content = file.read()
    
    # Call the function with the loaded content
    create_baseline_request(request_content)
